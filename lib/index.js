class t{array;length;constructor(t){this.length=t,this.array=new Uint8Array(Math.ceil(t/8))}static concat(e,r){let s=new t(e.length+r.length);for(let t=0;t<e.length;t++)s.setBit(t,e.getBit(t));for(let t=0;t<r.length;t++)s.setBit(t+e.length,r.getBit(t));return s}static xor(e,r){let s=new t(Math.min(e.length,r.length));for(let t=0;t<s.length;t++)s.setBit(t,e.getBit(t)^r.getBit(t));return s}static from(e){let r;if(Array.isArray(e)){let r=new t(e.length);return e.forEach((t,e)=>{r.setBit(e,!!t)}),r}let s=new t(8*(r=e instanceof Uint8Array?e:Buffer.from(e,"utf-8")).length);return s.array=r,s}getBit(t){if(t>=this.length)throw Error("Index out of range!");let e=Math.floor(t/8);return this.array[e]>>t%8&1}setBit(t,e){if(t>=this.length)throw Error("Index out of range!");let r=Math.floor(t/8),s=t%8;e?this.array[r]|=1<<s:this.array[r]&=~(1<<s)}trunc(e){let r=new t(e);for(let t=0;t<Math.min(this.length,e);t++)r.setBit(t,this.getBit(t));return r}toString(t="hex"){return Buffer.from(this.array).toString(t)}}class e{string;size;constructor(e){this.string=new t(25*e.w),this.size=e}static getStateSize(t){return{w:t/25,l:Math.log2(t/25)}}getBitIndex(t,e,r){return this.size.w*(5*e+t)+r}getBit(t,e,r){let s=this.getBitIndex(t,e,r);return this.string.getBit(s)}setBit(t,e,r,s){let i=this.getBitIndex(t,e,r);this.string.setBit(i,s)}}function r(r,s,i){let n=new e(e.getStateSize(s)),o=12+2*n.size.l;n.string=r;for(let r=o-(i??o);r<o;r++){var l,a;l=n,a=r,n=function(r,s){let i=new e(r.size);for(let t=0;t<5;t++)for(let e=0;e<5;e++)for(let s=0;s<r.size.w;s++){let n=r.getBit(t,e,s);i.setBit(t,e,s,n)}let n=new t(r.size.w);for(let t=0;t<=r.size.l;t++)n.setBit(Math.pow(2,t)-1,function(t){if(0==(t%255+255)%255)return 1;let e=1;for(let r=0;r<(t%255+255)%255;r++)128&e?e=(e<<1^113)&255:e<<=1;return 1&e}(t+7*s));for(let t=0;t<r.size.w;t++){let e=i.getBit(0,0,t)^n.getBit(t);i.setBit(0,0,t,e)}return i}(function(t){let r=new e(t.size);for(let e=0;e<5;e++)for(let s=0;s<5;s++)for(let i=0;i<t.size.w;i++){let n=t.getBit(e,s,i)^(1^t.getBit(((e+1)%5+5)%5,s,i))&t.getBit(((e+2)%5+5)%5,s,i);r.setBit(e,s,i,n)}return r}(function(t){let r=new e(t.size);for(let e=0;e<5;e++)for(let s=0;s<5;s++)for(let i=0;i<t.size.w;i++){let n=t.getBit(((e+3*s)%5+5)%5,e,i);r.setBit(e,s,i,n)}return r}(function(t){let r=new e(t.size);for(let e=0;e<t.size.w;e++){let s=t.getBit(0,0,e);r.setBit(0,0,e,s)}let s=1,i=0;for(let e=0;e<24;e++){var n;for(let o=0;o<t.size.w;o++){let l=t.getBit(s,i,((o-(e+1)*(e+2)/2)%(n=t.size.w)+n)%n);r.setBit(s,i,o,l)}[s,i]=[i,((2*s+3*i)%5+5)%5]}return r}(function(t){let r=new e(t.size),s=new e(t.size),i=new e(t.size);for(let e=0;e<5;e++)for(let s=0;s<t.size.w;s++){let i=t.getBit(e,0,s)^t.getBit(e,1,s)^t.getBit(e,2,s)^t.getBit(e,3,s)^t.getBit(e,4,s);r.setBit(e,0,s,i)}for(let e=0;e<5;e++)for(let i=0;i<t.size.w;i++){var n;let o=r.getBit(((e-1)%5+5)%5,0,i)^r.getBit(((e+1)%5+5)%5,0,((i-1)%(n=t.size.w)+n)%n);s.setBit(e,0,i,o)}for(let e=0;e<5;e++)for(let r=0;r<5;r++)for(let n=0;n<t.size.w;n++){let o=t.getBit(e,r,n)^s.getBit(e,0,n);i.setBit(e,r,n,o)}return i}(l)))),a)}return n.string}class s{width;digestLen;rate;sha;constructor(t=512,e={},r=!1){if(this.digestLen=t,this.width=e.width??1600,this.rate=e.rate??this.width-2*t,this.sha=r,this.rate<0||this.rate>this.width)throw Error("Width is not large enough for given rate/size!")}hash(e){let s=t.from(e);return Buffer.from(function(e,s,i,n,o=!1){if(s<0)throw Error("Bit length must not be negative");let l=t.concat(e,function(e,r,s){if(r<0)throw Error("Integer must not be negative");let i=s?[0,1,1,0]:[1],n=i.length+1,o=new t(((-r-n)%e+e)%e+n);return i.forEach((t,e)=>{o.setBit(e,!!t)}),o.setBit(o.length-1,!0),o}(n,e.length,o)),a=l.length/n,c=i-n,f=[],h=new t(i);for(let e=0;e<a;e++){let r=new t(n+c);for(let t=0;t<n;t++)r.setBit(t,l.getBit(e*n+t));f.push(r)}for(let e=0;e<a;e++)h=r(t.xor(h,f[e]),i);let g=new t(0);for(;;){if(s<=(g=t.concat(g,h.trunc(n))).length)return g.trunc(s);h=r(h,i)}}(s,this.digestLen,this.width,this.rate,this.sha).array)}}class i extends s{constructor(t=512,e={}){super(t,e,!0)}}class n extends i{constructor(t={}){super(224,t)}}class o extends i{constructor(t={}){super(256,t)}}class l extends i{constructor(t={}){super(384,t)}}class a extends i{constructor(t={}){super(512,t)}}class c extends s{constructor(t=512,e={}){super(t,e,!1)}}class f extends c{constructor(t={}){super(224,t)}}class h extends c{constructor(t={}){super(256,t)}}class g extends c{constructor(t={}){super(384,t)}}class u extends c{constructor(t={}){super(512,t)}}export{i as SHA3,n as SHA3_224,o as SHA3_256,l as SHA3_384,a as SHA3_512,c as Keccak,f as Keccak_224,h as Keccak_256,g as Keccak_384,u as Keccak_512};